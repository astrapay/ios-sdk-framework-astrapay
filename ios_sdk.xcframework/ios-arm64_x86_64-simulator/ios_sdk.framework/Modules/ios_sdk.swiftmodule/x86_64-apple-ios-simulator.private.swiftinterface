// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name ios_sdk
import AVFoundation
import AVKit
import Alamofire
import ContactsUI
import CoreGraphics
import DeveloperToolsSupport
import Factory
import Foundation
import IQKeyboardManagerSwift
import KeychainAccess
import Lottie
import MoEngageGeofence
import MoEngageSDK
import Photos
import RxSwift
import SkeletonView
import SnapKit
import Swift
import SwiftUI
import UIKit
import UserNotifications
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import ios_sdk
@_hasMissingDesignatedInitializers public class QRNewRouter {
  public var astraPayAppDelegate: (any ios_sdk.AstraPayAppSdkProtocol)?
  public static let sharedInstance: ios_sdk.QRNewRouter
  public var delegate: (any ios_sdk.QRProtocolSdk)?
  public func navigateToQrScan(from vc: UIKit.UIViewController)
  public func popToQrScanner(from vc: UIKit.UIViewController)
  @objc deinit
}
public enum OtpMechanism : Swift.String, Swift.Codable {
  case EMAIL
  case SMS
  case WHATSAPP
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum AuthenticationClaim : Swift.String, Swift.Codable {
  case REGISTRATION
  case LOGIN
  case QRIS_TRANSACTION
  case FORGOT_PIN
  case EKYC
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension Swift.String : Swift.Error {
}
public struct QrisResponse<T> {
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class WebTopUpViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class AnalyticMoEngageConfig {
  public static func setup()
  public static func refresh()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class KeychainHelper {
  public static func getDeviceId() -> Swift.String
  @objc deinit
}
@_hasMissingDesignatedInitializers public class WebviewRouter {
  public static let sharedInstance: ios_sdk.WebviewRouter
  public func navigateToWebviewRouter(_ vc: UIKit.UIViewController)
  @objc deinit
}
public protocol ApOtpDelegate : AnyObject {
  func onOtpSuccess(_ response: Any, otpId: Swift.Int)
  func onOtpError(_ response: Any)
  func onUnauthorized()
  func onBackPressed()
}
public protocol ApOtpDatasource {
  func getResendOtpRequest(_ phoneNumber: Swift.String, _ mechanism: ios_sdk.OtpMechanism, _ accessSession: Swift.String) -> Any
  func getVerifyOtpRequest(_ phoneNumber: Swift.String, _ mechanism: ios_sdk.OtpMechanism, _ otpId: Swift.Int, _ otpValue: Swift.String, _ accessSession: Swift.String) -> Any
  func getResendOtpPath() -> Swift.String
  func getVerifyOtpPath(_ otpId: Swift.Int, _ accessSession: Swift.String) -> Swift.String
}
@_hasMissingDesignatedInitializers public class ApOtp {
  weak public var delegate: (any ios_sdk.ApOtpDelegate)?
  public var dataSource: (any ios_sdk.ApOtpDatasource)?
  public static func initOtpConfig(source: UIKit.UIViewController, mechanism: ios_sdk.OtpMechanism, phoneNumber: Swift.String, limitRetryIn: Swift.Int, isLocked: Swift.Bool, otpId: Swift.Int, accessSession: Swift.String = "", transactionToken: Swift.String = "", event: ios_sdk.AuthenticationClaim) -> ios_sdk.ApOtp
  public func checkIsOtpAvailable(initOtpRequest: @escaping (_ phoneNumber: Swift.String, _ mechanism: ios_sdk.OtpMechanism) -> Swift.Void)
  public func doOtpValidation()
  @objc deinit
}
public protocol QRProtocolSdk {
  func onForbidden(viewControler: UIKit.UIViewController)
  func onComplete(viewController: UIKit.UIViewController)
  func onFailed(viewController: UIKit.UIViewController)
  func onShowHistory(viewController: UIKit.UIViewController)
  func onProcessing(viewController: UIKit.UIViewController)
  func onCancel(viewController: UIKit.UIViewController)
}
public protocol AstraPayAppSdkProtocol {
  func onPaylaterActivate(viewController: UIKit.UIViewController)
}
public enum BuildMode {
  case sit
  case uat
  case prod
  public static func == (a: ios_sdk.BuildMode, b: ios_sdk.BuildMode) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class QRConfigurationSdk {
  public static var AUTH_TOKEN: Swift.String
  public static var SDK_TOKEN: Swift.String
  public static var BUILD_MODE: ios_sdk.BuildMode
  public static var isLoproVoucherAvailable: Swift.Bool
  public static var isPaylaterAvailable: Swift.Bool
  public static var loproVersion: Swift.Int
  public static var otpVersion: Swift.Bool
  public static var qrisConfirmationVersion: Swift.Int
  public static var isSnap: Swift.Bool
  public static var topupViewController: UIKit.UIViewController
  @objc deinit
}
extension ios_sdk.OtpMechanism : Swift.Equatable {}
extension ios_sdk.OtpMechanism : Swift.Hashable {}
extension ios_sdk.OtpMechanism : Swift.RawRepresentable {}
extension ios_sdk.AuthenticationClaim : Swift.Equatable {}
extension ios_sdk.AuthenticationClaim : Swift.Hashable {}
extension ios_sdk.AuthenticationClaim : Swift.RawRepresentable {}
extension ios_sdk.BuildMode : Swift.Equatable {}
extension ios_sdk.BuildMode : Swift.Hashable {}
